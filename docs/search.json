[{"path":"https://tdeswaef.github.io/aquacroponr/articles/example-scenario.html","id":"meteo-data","dir":"Articles","previous_headings":"","what":"Meteo data","title":"Example for scenario making","text":"","code":"Meteo_data <- read_delim(paste0(datapath, \"data.csv\"), delim = \",\", show_col_types = F) Meteo_s #> # A tibble: 1 × 2 #>   ID       file           #>   <chr>    <chr>          #> 1 Meteo_01 Meteo_S_01.csv"},{"path":[]},{"path":"https://tdeswaef.github.io/aquacroponr/articles/example-scenario.html","id":"initial-conditions","dir":"Articles","previous_headings":"","what":"Initial conditions","title":"Example for scenario making","text":"provide initial conditions design_scenario function, take default setting “FC”, results soil profile water content field capacity absence salts start simulation. initial conditions need Horizon Thickness variables soil input tibble SOL_s.","code":""},{"path":[]},{"path":"https://tdeswaef.github.io/aquacroponr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom De Swaef. Author, maintainer.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"De Swaef T (2024). AquacropOnR: Function collection using AquaCrop R. R package version 0.1.0, https://tdeswaef.github.io/aquacroponr/.","code":"@Manual{,   title = {AquacropOnR: Function collection for using AquaCrop from R},   author = {Tom {De Swaef}},   year = {2024},   note = {R package version 0.1.0},   url = {https://tdeswaef.github.io/aquacroponr/}, }"},{"path":"https://tdeswaef.github.io/aquacroponr/index.html","id":"aquacroponr","dir":"","previous_headings":"","what":"Function collection for using AquaCrop from R","title":"Function collection for using AquaCrop from R","text":"goal AquacropOnR make AquaCrop simulations within R easy possible. package currently tested AquaCrop standalone version 7.0 Windows. recent version can downloaded FAO website.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/index.html","id":"installation-and-setup","dir":"","previous_headings":"","what":"Installation and setup","title":"Function collection for using AquaCrop from R","text":"can install development version AquacropOnR using devtools package: installation AquaCrop standalone version required.","code":"library(devtools) devtools::install_git(url = \"https://github.com/tdeswaef/aquacroponr.git\", force = TRUE)"},{"path":"https://tdeswaef.github.io/aquacroponr/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Function collection for using AquaCrop from R","text":"definition AquaCrop wrapper function aquacrop_wrapper allow option run AquaCrop growing degree days instead days include code running sensitivity analysis using morris method include option use aquacrop_wrapper CroptimizR package","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 AquaCropR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/AquacropOnR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"AquacropOnR: Function collection for using AquaCrop from R — AquacropOnR-package","title":"AquacropOnR: Function collection for using AquaCrop from R — AquacropOnR-package","text":"package provides wrappers using AquaCrop within R simple possible. work inspired earlier initiatives APSIM (ApsimOnR) STICS (SticsOnR) crop models. , package aims intercface AquaCRop CroptimizR package.","code":""},{"path":[]},{"path":"https://tdeswaef.github.io/aquacroponr/reference/AquacropOnR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AquacropOnR: Function collection for using AquaCrop from R — AquacropOnR-package","text":"Maintainer: Tom De Swaef tom.deswaef@ilvo.vlaanderen.(ORCID)","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_morris.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper function for running a sensitivity analysis for AquaCrop using the morris method — aquacrop_morris","title":"A wrapper function for running a sensitivity analysis for AquaCrop using the morris method — aquacrop_morris","text":"aquacrop_morris operates 5 steps: Define morris design terms parameters, parameter ranges, trajectories method. See also morris function sensitivity package. Run AquaCrop model parameter combinations morris design. Choose level integration: model time steps, different variables Make array correct dimensions based simulations (step 2) integration level (step 3). tell array morris design step 1.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_morris.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper function for running a sensitivity analysis for AquaCrop using the morris method — aquacrop_morris","text":"","code":"aquacrop_morris(   situation = \"S_01\",   cycle_length,   backgroundpar = Spinach,   r = r,   binf = c(),   bsup = c(),   design = list(type = \"oat\", levels = 8, grid.jump = 1),   daily_output = c(1, 2),   outvars = c(\"Biomass\") )"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_morris.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper function for running a sensitivity analysis for AquaCrop using the morris method — aquacrop_morris","text":"situation character string vector scenarios run cycle_length integer representing length simulation period days backgroundpar reference parameter set (made read_CRO) r number trajectories morris algorithm binf named vector lower boundaries parameter ranges bsup named vector upper boundaries parameter ranges design list designing morris algorithm daily_output vector defining output variables extract AquaCrop outvars character vector output variable names sensitivity analysis","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_morris.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper function for running a sensitivity analysis for AquaCrop using the morris method — aquacrop_morris","text":"list class morris, containing input arguments, plus following components: call: matched call X data.frame containing design experiments (parameter value combinations) y either vector, matrix three-dimensional array model responses (depends output model) ee: y vector: \\((r \\times p)\\) - matrix elementary effects factors. y matrix: \\((r \\times p \\times ncol(y))\\) - array elementary effects factors columns y. y three-dimensional array: \\((r \\times p \\times dim(y)[2] \\times dim(y)[3])\\) - array elementary effects factors elements second third dimension y.","code":""},{"path":[]},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_morris.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A wrapper function for running a sensitivity analysis for AquaCrop using the morris method — aquacrop_morris","text":"","code":"if (FALSE) Scenario_s <- design_scenario(name = \"S_01\",     Input_Date = as.Date(\"2019-04-01\"),     Plant_Date = as.Date(\"2019-04-01\"),     IRRI = \"IRRI_01\",     Soil = \"Soil_01\",     Plu = \"Plu_01\",     Tnx = \"Tnx_01\",     ETo = \"ETo_01\")   if (FALSE) p <- aquacrop_morris(situation = \"S_01\", backgroundpar=Spinach, r = 20, binf=c(rt_max = 0.12, cgc = 0.1), bsup = c(rt_max = 0.55, cgc = 0.21), outvars = c(\"Biomass\", \"YSdryS\"))"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper function for running AquaCrop for use in CroptimizR package — aquacrop_wrapper","title":"A wrapper function for running AquaCrop for use in CroptimizR package — aquacrop_wrapper","text":"aquacrop_wrapper takes parameter values input AquaCrop simulation returns result list requested CroptimizR package.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper function for running AquaCrop for use in CroptimizR package — aquacrop_wrapper","text":"","code":"aquacrop_wrapper(   param_values,   situation,   model_options = list(AQ = AQ, cycle_length = 70, defaultpar = Spinach, output =     \"croptimizr\", daily_output = c(1, 2)),   ... )"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper function for running AquaCrop for use in CroptimizR package — aquacrop_wrapper","text":"param_values list crop parameters modify default situation character vector scenario names listed Scenario_s tibble model_options list model options: AQ aquacrop path generated path_config function, cycle_length integer representing length simulation period days, defaultpar default parameter list designed read_CRO function, output defines shape output returned daily_output defines daily output variables generated AquaCrop.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper function for running AquaCrop for use in CroptimizR package — aquacrop_wrapper","text":"dataframe list (model_options$output = 'croptimizr') daily outputs AquaCrop, concatenated different scenario's.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/aquacrop_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A wrapper function for running AquaCrop for use in CroptimizR package — aquacrop_wrapper","text":"","code":"if (FALSE) y <- aquacrop_wrapper(param_values = params,                       situation = Scenario_s$Scenario,                       model_options = list(AQ=AQ, defaultpar=Spinach,                                            output = \"croptimizr\", daily_output = c(1,2)))"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/design_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes the required tibble that is used as scenario argument in the aquacrop_wrapper function. — design_scenario","title":"Makes the required tibble that is used as scenario argument in the aquacrop_wrapper function. — design_scenario","text":"Makes required tibble used scenario argument aquacrop_wrapper function.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/design_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes the required tibble that is used as scenario argument in the aquacrop_wrapper function. — design_scenario","text":"","code":"design_scenario(   name,   Input_Date,   Plant_Date,   IRRI,   Soil,   Plu,   Tnx,   ETo,   FMAN = \"default\",   GWT = 2,   SW0 = \"FC\" )"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/design_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes the required tibble that is used as scenario argument in the aquacrop_wrapper function. — design_scenario","text":"name character vector names scenarios. Input_Date Date format vector initial input dates different scenarios Plant_Date Date format vector planting dates different scenarios IRRI character vector names ID IRRI_s tibble Soil character vector names Soil tibble(s) Plu character vector names Precipitation tibble(s) Tnx character vector names Temperature tibble(s) ETo character vector names Reference Evapotranspiration tibble(s) FMAN character vector names ID FMAN_s tibble GWT numeric vector depth ground water table m SW0 character vector names ID SW0_s tibble. \"FC\" initial conditions taken SOL_s tibble.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/design_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes the required tibble that is used as scenario argument in the aquacrop_wrapper function. — design_scenario","text":"tibble different scenarios run AquaCrop","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/ee_to_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the elemental effects array into a tibble — ee_to_dataframe","title":"Transform the elemental effects array into a tibble — ee_to_dataframe","text":"ee_to_dataframe takes morris output transforms 4-dimensional elemental effects array useful tibble","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/ee_to_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the elemental effects array into a tibble — ee_to_dataframe","text":"","code":"ee_to_dataframe(p, situation, cycle_length)"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/ee_to_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the elemental effects array into a tibble — ee_to_dataframe","text":"p output aquacrop_morris function situation situations listed aquacrop_morris() function cycle_length cycle_length parameter aquacrop_morris() function","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/ee_to_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the elemental effects array into a tibble — ee_to_dataframe","text":"tibble 6 variables: traject, par, DAP, outvar, ee Scenario","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/ee_to_dataframe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform the elemental effects array into a tibble — ee_to_dataframe","text":"resulting tibble 6 variables: traject: refers trajectory number Morris design par: parameters sensitivity evaluated DAP: Days Planting simulation save time series outvar: output variables sensitivity evaluated ee: elemental effects output aquacrop_morris() function. elemental effects scaled parameter range (see sensitivity::morris()). Scenario: scenarios simulation done","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/path_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup of AquaCrop path — path_config","title":"Setup of AquaCrop path — path_config","text":"Returns correct AquaCrop.exe path, checking required folder structure. aware working directory set folder aquacrop.exe file located (setwd()).","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/path_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup of AquaCrop path — path_config","text":"","code":"path_config(AquaCrop.path)"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/path_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup of AquaCrop path — path_config","text":"AquaCrop.path character name folder aquacrop.exe file located","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/path_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup of AquaCrop path — path_config","text":"character name path aquacrop.exe file, also writes DailyResults.SIM file appropriate folder. file","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/plotinput.html","id":null,"dir":"Reference","previous_headings":"","what":"plot the the input data for quality control — plotinput","title":"plot the the input data for quality control — plotinput","text":"plotinput() takes scenario tibble input, checks whether scenario tibble correctly designed, required data correctly loaded. successful, produces ggplot visualization input data","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/plotinput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot the the input data for quality control — plotinput","text":"","code":"plotinput(Scenario_s)"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/plotinput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot the the input data for quality control — plotinput","text":"Scenario_s tibble designed scenarios (designed design_scenario())","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/plotinput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot the the input data for quality control — plotinput","text":"ggplots input data (RStudio: check 'Plots' tab) tables irrigation soils (RStudio: check 'Viewer' tab)","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/plotinput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot the the input data for quality control — plotinput","text":"","code":"if (FALSE) plotinput(Scenario_s)"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/read_CRO.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a .CRO file and return it as a list — read_CRO","title":"Read a .CRO file and return it as a list — read_CRO","text":"Read .CRO file return list","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/read_CRO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a .CRO file and return it as a list — read_CRO","text":"","code":"read_CRO(default_crop)"},{"path":"https://tdeswaef.github.io/aquacroponr/reference/read_CRO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a .CRO file and return it as a list — read_CRO","text":"default_crop file path .CRO file read.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/read_CRO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a .CRO file and return it as a list — read_CRO","text":"named list crop parameter name-value pairs.","code":""},{"path":"https://tdeswaef.github.io/aquacroponr/reference/read_CRO.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a .CRO file and return it as a list — read_CRO","text":"crop file required AquaCrop 7.0 higher requires 83 lines content. Crop files generated using previous AquaCrop versions, typically contain less lines (76). read_CRO function detects whether file sufficient length, complements file needed.","code":""}]
